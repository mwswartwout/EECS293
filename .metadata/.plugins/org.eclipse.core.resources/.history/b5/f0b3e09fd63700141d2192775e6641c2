package hw2;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;

public class Link 
{
	private Set<User> users;
	private ArrayList<Date> dates;
	private Validity status;
	
	public Link()
	{
		status = Validity.INVALID;
	}
	
	public boolean setUsers(Set<User> users)
	{
		if (isValid())
			return false;
		if (users.size() > 2)
			return false;
		else
		{
			this.users = users;
			return true;
		}
	}
	
	public boolean isValid()
	{
		if (status == Validity.VALID)
			return true;
		else
			return false;
	}
	
	public Set<User> getUsers() throws UninitializedObjectException
	{
		if (isValid())
			return users;
		else
			throw new UninitializedObjectException();
	}
	
	public boolean establish(Date date) throws UninitializedObjectException
	{
		if (isActive(date))
			return false;
		else if (date.isBefore(dates.get(dates.size())))
			return false;
		else if (!isValid())
			throw new UninitializedObjectException();
		else 
		{
			date.setActivity(Activity.ACTIVE);
			dates.add(date);
			return true;
		}
	}
	
	public boolean tearDown(Date date) throws UninitializedObjectException
	{
		if (!isActive(date))
			return false;
		else if (date.isBefore(dates.get(dates.size())))
			return false;
		else if (!isValid())
			throw new UninitializedObjectException();
		else
		{
			date.setActivity(Activity.INACTIVE);
			dates.add(date);
			return true;
		}
		
	}
	
	public boolean isActive(Date date)
	{
		if (dates.get(dates.lastIndexOf(date)).getActivity() == Activity.ACTIVE)
			return true;
		else
			return false;
	}
	
	public Date firstEvent() throws UninitializedObjectException
	{
		if (isValid())
			return dates.get(0);
		else
			throw new UninitializedObjectException();
	}
	
	public Date nextEvent(Date date) throws UninitializedObjectException
	{
		if (isValid())
			return dates.get(dates.lastIndexOf(date) + 1);
		else
			throw new UninitializedObjectException();
	}
	
	public String toString()
	{
		if (isValid())
		{
			Iterator<User> iterator = users.iterator();
			
			while (iterator.hasNext())
				System.out.println("User: " +iterator.next().getID());
			
			Date currentDate;
			
			for (int i = 0; i < dates.size(); i++)
			{
				currentDate = dates.get(i);
				System.out.println(currentDate.getMonth().getValue() + " " currentDate.getDay().getValue() + " " currentDate.getYear());
				 
			}

		}
	}
}
